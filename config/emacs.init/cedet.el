(load "~/.emacs.d/el-get/cedet/common/cedet.el")
(add-to-list 'load-path "~/.emacs.d/el-get/cedet/")

(require 'cedet)
(require 'cedet-build)
(require 'semantic)
(require 'semantic-ia)
(require 'cedet-contrib)
(require 'eassist nil 'noerror)
(require 'srecode)
;;(semantic-load-enable-minimum-features)
(semantic-load-enable-code-helpers)
;;(semantic-load-enable-guady-code-helpers)
;;(semantic-load-enable-excessive-code-helpers)
;;(semantic-load-enable-semantic-debugging-helpers)

(global-ede-mode t)
(global-srecode-minor-mode 1)

;;key-binding
(defun my-eassist-mode-key-binding ()
  (define-key c-mode-base-map (kbd "<M-s-up>") 'eassist-switch-h-cpp)
  (define-key c-mode-base-map (kbd "C-c s-p") 'semantic-analyze-proto-impl-toggle))
(add-hook 'c-mode-hook 'my-eassist-mode-key-binding)
(global-set-key (kbd "s-p") 'semantic-ia-fast-jump)
(global-set-key (kbd "s-r")
  (lambda ()
    (interactive)
    (if (ring-empty-p (oref semantic-mru-bookmark-ring ring))
        (error "Semantic Bookmark ring is currently empty"))
    (let* ((ring (oref semantic-mru-bookmark-ring ring))
           (alist (semantic-mrub-ring-to-assoc-list ring))
           (first (cdr (car alist))))
      (if (semantic-equivalent-tag-p (oref first tag)
                                     (semantic-current-tag))
          (setq first (cdr (car (cdr alist)))))
      (semantic-mrub-switch-tags first))))
(global-set-key (kbd "<C-escape>") 'semantic-ia-complete-symbol-menu)
(setq senator-prefix-key "C-c")
(global-set-key (kbd "s-/") 'comment-region)
(global-set-key (kbd "C-s-/") 'uncomment-region)